<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- 开启注解处理器 -->
	<context:annotation-config />
	<!-- spring 组件扫描 -->
	<context:component-scan base-package="com.*" />

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath*:*.properties</value>
		</property>
	</bean>

	<!-- <bean id="dataSource"	class="org.springframework.jdbc.datasource.DriverManagerDataSource" destroy-method="close" > -->
		<bean id="dataSource" destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 最大连接数据库连接数，设置为0时，表示没有限制 -->
              <property name="maxActive"> 
                     <value>20</value> 
              </property> 
              <!-- 最大等待连接中的数量，设置为0时，表示没有限制 -->
              <property name="maxIdle"> 
                     <value>1</value> 
              </property> 
              <!-- 最大等待秒数，单位为毫秒， 超过时间会报出错误信息 -->
              <property name="maxWait"> 
                     <value>120000</value> 
              </property> 
               <!-- 是否自我中断，默认是 false  -->
               <property name="removeAbandoned">
               		<value>true</value>
               </property>
               <!-- 几秒后数据连接会自动断开，在removeAbandoned为true，提供该值 -->
               <property name="removeAbandonedTimeout">
               		<value>600</value>
               </property>
		
	</bean>



	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />

		<property name="packagesToScan">
			<list>
				<value>com.eshop.model</value>
				<value>com.eshop.view</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<!-- <prop key="hibernate.cache.use_second_level_cache">true</prop> -->   <!--设置缓存机制为二级缓存 -->

				<!-- <prop key="hibernate.cache.use_query_cache">true</prop> -->    <!--启动查询缓存 -->

				<!-- <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop> -->  <!--设置二级缓存的Provider类 -->

				<!-- <prop key="hibernate.cache.provider_configuration_file_resource_path">ehcache.xml</prop> -->   <!--设置缓存的配置文件路径 -->
				
				<prop key="hibernate.connection.autocommit">true</prop> 
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hbm2ddl.auto">update</prop>
				<prop key="current_session_context_class">thread</prop>
				<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
				<!--<prop key="javax.persistence.validation.mode">none</prop> -->
			</props>
		</property>
	</bean>
	<!-- 装配hibernateTemplate实例 -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- 定义hibernate的事务管理器HibernateTransactionManager -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<!-- 依赖注入sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 基于AOP技术的事务管理 -->
	<aop:config>
		<!-- 定义一个事务切入点，拦截 com..service包中所有类的所有方法 -->
		<aop:pointcut id="bussinessService"
			expression="execution(public * com.*.*.service..*.*(..))" />
		<!-- 引用txAdvice事务通知 -->
		<aop:advisor pointcut-ref="bussinessService" advice-ref="txAdvice" />
	</aop:config>
	<!-- 定义一个事务通知txAdvice，配置事务的传播性 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="find*" read-only="true" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="load*" read-only="true" />
			<tx:method name="count*" read-only="true" />
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="save*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="execute*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="create*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="remove*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	
	<!-- 引用外部文件 -->
	<import resource="applicationContext-mail.xml"/>
	<import resource="applicationContext-buffalo.xml"/>

</beans>